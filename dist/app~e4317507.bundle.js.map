{"version":3,"file":"app~e4317507.bundle.js","mappings":";uJAUA,QANe,CACb,WAAKA,EACL,YAAaC,EAAAA,EACb,cAAeC,EAAAA,mCCiBjB,QAxBkB,CAChBC,2BADgB,WAEd,IAAMC,EAAMC,OAAOC,SAASC,KAAKC,MAAM,GAAGC,cACpCC,EAAaC,KAAKC,aAAaR,GACrC,OAAOO,KAAKE,aAAaH,EAC1B,EACDI,8BANgB,WAOd,IAAMV,EAAMC,OAAOC,SAASC,KAAKC,MAAM,GAAGC,cAC1C,OAAOE,KAAKC,aAAaR,EAC1B,EACDQ,aAVgB,SAUHR,GACX,IAAMW,EAAaX,EAAIY,MAAM,KAC7B,MAAO,CACLC,SAAUF,EAAW,IAAM,KAC3BG,GAAIH,EAAW,IAAM,KACrBI,KAAMJ,EAAW,IAAM,KAE1B,EACDF,aAlBgB,SAkBHH,GACX,OAAQA,EAAWO,SAAX,WAA0BP,EAAWO,UAAa,MACnDP,EAAWQ,GAAK,OAAS,KACzBR,EAAWS,KAAX,WAAsBT,EAAWS,MAAS,GAClD,mCCAH,QAtBwB,CACtBC,KADsB,YACY,WAA3BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,QACrBF,EAAOG,iBAAiB,SAAS,SAACC,GAChC,EAAKC,cAAcD,EAAOH,EAC3B,IAEDC,EAAQC,iBAAiB,SAAS,SAACC,GACjC,EAAKE,aAAaF,EAAOH,EAC1B,GACF,EAEDI,cAXsB,SAWRD,EAAOH,GACnBG,EAAMG,kBACNN,EAAOO,UAAUC,OAAO,OACzB,EAEDH,aAhBsB,SAgBTF,EAAOH,GAClBG,EAAMG,kBACNN,EAAOO,UAAUE,OAAO,OACzB,mSClBH,smNA4CA,QA3C4B,CACpBX,KADoB,YAC8D,6HAA3EY,EAA2E,EAA3EA,oBAAyCC,EAAkC,EAAtDC,mBAAwCC,EAAc,EAAdA,WACxE,EAAKC,qBAAuBJ,EAC5B,EAAKK,YAAcF,EACnB,EAAKG,oBAAsBL,EAH2D,SAKhF,EAAKM,gBAL2E,4CAMvF,EAEKA,cAToB,WASJ,yHACZrB,EAAO,EAAKmB,YAAZnB,GADY,SAGV,EAAKsB,mBAAmBtB,GAHd,kCAIlB,EAAKuB,eAJa,sBAMlB,EAAKC,cANa,4CAQrB,EAEKF,mBAnBoB,SAmBDtB,GAAI,kIACF,EAAKoB,oBAAoBK,cAAczB,GADrC,cACrBiB,EADqB,2BAElBA,GAFkB,4CAG5B,EAEDO,YAxB0B,WAwBZ,WACZ/B,KAAKyB,qBAAqBQ,WAAYC,EAAAA,EAAAA,MACnBC,SAASC,eAAe,cAChCvB,iBAAiB,QAA5B,YAAqC,8FAC7B,EAAKc,oBAAoBU,cAAc,EAAKX,aADf,OAEnC,EAAKE,gBAF8B,2CAItC,EAEDE,aAjC0B,WAiCX,WACb9B,KAAKyB,qBAAqBQ,WAAYK,EAAAA,EAAAA,MACnBH,SAASC,eAAe,cAChCvB,iBAAiB,QAA5B,YAAqC,8FAC7B,EAAKc,oBAAoBY,iBAAiB,EAAKb,YAAYnB,IAD9B,OAEnC,EAAKqB,gBAF8B,2CAItC,mSCzCH,m6MAgBA,QAfgB,gCAAG,uFACX,kBAAmBY,UADR,uBAEfC,QAAQC,IAAI,+CAFG,iCAMXC,EAAK,IAAIC,EAAAA,GAAsB,iBANpB,kBAQTD,EAAGE,WARM,OASfJ,QAAQC,IAAI,6BATG,kDAWfD,QAAQC,IAAI,oCAAZ,MAXe,wOAAH","sources":["webpack://restaurant-apps/./src/scripts/routes/routes.js","webpack://restaurant-apps/./src/scripts/routes/url-parser.js","webpack://restaurant-apps/./src/scripts/utils/drawer-initiator.js","webpack://restaurant-apps/./src/scripts/utils/like-button-initiator.js","webpack://restaurant-apps/./src/scripts/utils/sw-register.js"],"sourcesContent":["import Detail from '../views/pages/detail';\r\nimport Favorite from '../views/pages/favorite';\r\nimport Home from '../views/pages/home';\r\n\r\nconst routes = {\r\n  '/': Home,\r\n  '/favorite': Favorite,\r\n  '/detail/:id': Detail,\r\n};\r\n\r\nexport default routes;\r\n","const UrlParser = {\r\n  parseActiveUrlWithCombiner() {\r\n    const url = window.location.hash.slice(1).toLowerCase();\r\n    const splitedUrl = this._urlSplitter(url);\r\n    return this._urlCombiner(splitedUrl);\r\n  },\r\n  parseActiveUrlWithoutCombiner() {\r\n    const url = window.location.hash.slice(1).toLowerCase();\r\n    return this._urlSplitter(url);\r\n  },\r\n  _urlSplitter(url) {\r\n    const urlsSplits = url.split('/');\r\n    return {\r\n      resource: urlsSplits[1] || null,\r\n      id: urlsSplits[2] || null,\r\n      verb: urlsSplits[3] || null,\r\n    };\r\n  },\r\n  _urlCombiner(splitedUrl) {\r\n    return (splitedUrl.resource ? `/${splitedUrl.resource}` : '/')\r\n        + (splitedUrl.id ? '/:id' : '')\r\n        + (splitedUrl.verb ? `/${splitedUrl.verb}` : '');\r\n  },\r\n};\r\nexport default UrlParser;\r\n","const DrawerInitiator = {\r\n  init({ button, drawer, content }) {\r\n    button.addEventListener('click', (event) => {\r\n      this._toggleDrawer(event, drawer);\r\n    });\r\n\r\n    content.addEventListener('click', (event) => {\r\n      this._closeDrawer(event, drawer);\r\n    });\r\n  },\r\n\r\n  _toggleDrawer(event, drawer) {\r\n    event.stopPropagation();\r\n    drawer.classList.toggle('open');\r\n  },\r\n\r\n  _closeDrawer(event, drawer) {\r\n    event.stopPropagation();\r\n    drawer.classList.remove('open');\r\n  },\r\n};\r\n\r\nexport default DrawerInitiator;\r\n","import { createLikeRestaurantButtonTemplate, createUnlikeRestaurantButtonTemplate } from '../views/templates/template-creator';\r\n\r\nconst LikeButtonInitiator = {\r\n  async init({ likeButtonContainer, favoriteRestaurant: FavoriteRestaurant, restaurant }) {\r\n    this._likeButtonContainer = likeButtonContainer;\r\n    this._restaurant = restaurant;\r\n    this._favoriteRestaurant = FavoriteRestaurant;\r\n\r\n    await this._renderButton();\r\n  },\r\n\r\n  async _renderButton() {\r\n    const { id } = this._restaurant;\r\n\r\n    if (await this._isRestaurantExist(id)) {\r\n      this._renderLiked();\r\n    } else {\r\n      this._renderLike();\r\n    }\r\n  },\r\n\r\n  async _isRestaurantExist(id) {\r\n    const restaurant = await this._favoriteRestaurant.getRestaurant(id);\r\n    return !!restaurant;\r\n  },\r\n\r\n  _renderLike() {\r\n    this._likeButtonContainer.innerHTML = createLikeRestaurantButtonTemplate();\r\n    const likeButton = document.getElementById('likeButton');\r\n    likeButton.addEventListener('click', async () => {\r\n      await this._favoriteRestaurant.putRestaurant(this._restaurant);\r\n      this._renderButton();\r\n    });\r\n  },\r\n\r\n  _renderLiked() {\r\n    this._likeButtonContainer.innerHTML = createUnlikeRestaurantButtonTemplate();\r\n    const likeButton = document.getElementById('likeButton');\r\n    likeButton.addEventListener('click', async () => {\r\n      await this._favoriteRestaurant.deleteRestaurant(this._restaurant.id);\r\n      this._renderButton();\r\n    });\r\n  },\r\n};\r\n\r\nexport default LikeButtonInitiator;\r\n","import * as WorkboxWindow from 'workbox-window';\r\n\r\nconst swRegister = async () => {\r\n  if (!('serviceWorker' in navigator)) {\r\n    console.log('Service Worker not supported in the browser');\r\n    return;\r\n  }\r\n\r\n  const wb = new WorkboxWindow.Workbox('/sw.bundle.js');\r\n  try {\r\n    await wb.register();\r\n    console.log('Service worker registered');\r\n  } catch (error) {\r\n    console.log('Failed to register service worker', error);\r\n  }\r\n};\r\n\r\nexport default swRegister;\r\n"],"names":["Home","Favorite","Detail","parseActiveUrlWithCombiner","url","window","location","hash","slice","toLowerCase","splitedUrl","this","_urlSplitter","_urlCombiner","parseActiveUrlWithoutCombiner","urlsSplits","split","resource","id","verb","init","button","drawer","content","addEventListener","event","_toggleDrawer","_closeDrawer","stopPropagation","classList","toggle","remove","likeButtonContainer","FavoriteRestaurant","favoriteRestaurant","restaurant","_likeButtonContainer","_restaurant","_favoriteRestaurant","_renderButton","_isRestaurantExist","_renderLiked","_renderLike","getRestaurant","innerHTML","createLikeRestaurantButtonTemplate","document","getElementById","putRestaurant","createUnlikeRestaurantButtonTemplate","deleteRestaurant","navigator","console","log","wb","WorkboxWindow","register"],"sourceRoot":""}